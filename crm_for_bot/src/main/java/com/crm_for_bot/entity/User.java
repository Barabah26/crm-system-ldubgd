package com.crm_for_bot.entity;

import com.fasterxml.jackson.annotation.JsonIgnore;
import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

import java.util.HashSet;
import java.util.Set;

/**
 * Entity representing a user in the application.
 * This class contains details about users, including their roles and credentials.
 */
@Getter
@Setter
@Entity
@NoArgsConstructor
@AllArgsConstructor
@Table(name = "users")
public class User {

    /**
     * The unique identifier for the user.
     * This field is the primary key and is automatically generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "user_id", nullable = false)
    private Long userId;

    /**
     * The username of the user.
     * This field must be unique and cannot be null. It is used for user identification.
     */
    @Column(name = "user_name", length = 36, nullable = false, unique = true)
    private String userName;

    /**
     * The encrypted password of the user.
     * This field stores the password in an encrypted format for security purposes.
     */
    @Column(name = "encrypted_password", length = 128, nullable = false)
    private String encryptedPassword;

    /**
     * The set of roles assigned to the user.
     * This field establishes a many-to-many relationship with the `Role` entity.
     * Roles are eagerly fetched and are not included in JSON serialization to avoid circular references.
     */
    @ManyToMany(fetch = FetchType.EAGER)
    @JoinTable(
            name = "user_roles",
            joinColumns = @JoinColumn(name = "user_id"),
            inverseJoinColumns = @JoinColumn(name = "role_id")
    )
    @JsonIgnore
    private Set<Role> roles = new HashSet<>();

    @Override
    public String toString() {
        return "User{" +
                "userId=" + userId +
                ", userName='" + userName + '\'' +
                ", encryptedPassword='" + encryptedPassword + '\'' +
                '}';
    }
}
